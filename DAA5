















































































#include <stdio.h>
#include <string.h>


int horspool(char T[], char P[], int n, int m);

int main() {
    char T[100], P[100];
    int flag;

    printf("Enter the Text String \n");
    fgets(T, sizeof(T), stdin);
   

    printf("Enter the Pattern String \n");
    fgets(P, sizeof(P), stdin);
   

    flag = horspool(T, P, strlen(T), strlen(P));

    if (flag == -1)
        printf("String not found\n");
    else
        printf("String found at position %d\n", flag + 1); // +1 to match typical human-readable positions

    return 0;
}

// Horspool's algorithm implementation
int horspool(char T[], char P[], int n, int m) {
    int table[256]; // ASCII character set size
    int i, j;

    // Initialize table with default shift values
    for (i = 0; i < 256; i++)
        table[i] = m;

    // Populate table with pattern shift values
    for (i = 0; i < m - 1; i++)
        table[(unsigned char)P[i]] = m - 1 - i;

    i = m - 1;

    // Horspool's algorithm main loop
    while (i < n) {
        j = 0;
        while (j < m && T[i - j] == P[m - 1 - j])
            j++;

        if (j == m)
            return i - m + 1; // Match found

        i += table[(unsigned char)T[i]];
    }
    return -1; // No match found
}
